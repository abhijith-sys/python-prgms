import numpy as np
from PIL import Image
import matplotlib.pyplot as plt
def sobel_filter(image):
 kernel_x = np.array([[-1, 0, 1],
 [-2, 0, 2],
 [-1, 0, 1]])
 kernel_y = np.array([[-1, -2, -1],
 [ 0, 0, 0],
 [ 1, 2, 1]])
 padded_image = np.pad(image, pad_width=1, mode='constant', constant_values=0)
 height, width = image.shape
 sobel_x = np.zeros_like(image)
 sobel_y = np.zeros_like(image)
 for i in range(height):
 for j in range(width):
 region = padded_image[i:i+3, j:j+3]
 sobel_x[i, j] = np.sum(region * kernel_x)
 sobel_y[i, j] = np.sum(region * kernel_y)
 return sobel_x, sobel_y
image = Image.open("img/my_img.jpg").convert('L')
image_array = np.array(image)
sobel_x, sobel_y = sobel_filter(image_array)
gradient_magnitude = np.sqrt(sobel_x**2 + sobel_y**2)
plt.figure(figsize=(10, 5))
plt.subplot(1, 2, 1), plt.imshow(image_array, cmap='gray'), plt.title('Original Image')
plt.subplot(1, 2, 2), plt.imshow(gradient_magnitude, cmap='gray'), plt.title('Edge Detected
Image')
plt.show()
